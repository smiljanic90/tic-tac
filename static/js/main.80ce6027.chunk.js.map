{"version":3,"sources":["Components/Squares.js","Components/Board.js","Components/Game.js","whoWins.js","index.js"],"names":["Square","value","onClick","className","Board","squares","map","square","i","Game","status","useState","Array","fill","board","setBoard","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","moves","step","move","desc","jumpTo","boardPoen","slice","current","ReactDOM","render","document","getElementById"],"mappings":"uKASeA,EANA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACpB,OACE,wBAAQC,UAAU,SAASD,QAASA,EAApC,SAA8CD,KCOrCG,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASH,EAAZ,EAAYA,QAAZ,OACV,qBAAKC,UAAU,QAAf,SACGE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAgBP,MAAOM,EAAQL,QAAS,kBAAMA,EAAQM,KAAzCA,SCFrB,IAoDeC,EApDF,WACX,IAgCMC,EAhCN,EAA0BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAlD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECTD,SAAyBf,GAW/B,IAVA,IAAMgB,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CACtC,kBAAkBa,EAAMb,GAAxB,GAAOe,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACrE,OAAOpB,EAAQkB,GAGjB,OAAO,KDRSG,CAAgBZ,EAAME,IAkB7BW,EAAQb,EAAMR,KAAI,SAACsB,EAAMC,GAC7B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ3B,QAAS,kBAXR,SAAC0B,GACZX,EAAcW,GACdT,EAAWS,EAAO,IAAM,GASCG,CAAOF,IAA9B,SAAsCC,KAD/BD,MAYb,OAJEnB,EADEU,EACO,WAAaA,EAEb,iBAAmBF,EAAU,IAAM,KAG5C,sBAAKf,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SAAyBO,IAC3B,sBAAKP,UAAU,aAAf,UACE,cAAC,EAAD,CAAOE,QAASS,EAAME,GAAad,QArCvB,SAACM,GACnB,IAAMwB,EAAYlB,EAAMmB,MAAM,EAAGjB,EAAa,GACxCkB,EAAUF,EAAUhB,GACpBX,EAAO,YAAO6B,GAChBd,GAAUf,EAAQG,KACtBH,EAAQG,GAAKU,EAAU,IAAM,IAC7BH,EAAS,GAAD,mBAAKiB,GAAL,CAAgB3B,KACxBc,GAAYD,GACZD,EAAce,EAAUV,YA8BlB,qBAAKnB,UAAU,YAAf,SACA,6BAAKwB,aE5CfQ,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,U","file":"static/js/main.80ce6027.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../index.css';\r\n\r\nconst Square = ({value, onClick}) => {\r\n    return (\r\n      <button className=\"square\" onClick={onClick}>{value}</button>\r\n    );\r\n  }\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Squares\";\r\nimport '../index.css';\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n    <div className=\"board\">\r\n      {squares.map((square, i) => (\r\n        <Square key={i} value={square} onClick={() => onClick(i)} />\r\n      ))}\r\n    </div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport {calculateWinner} from '../whoWins'\r\nimport '../index.css';\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0)\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(board[stepNumber]);\r\n\r\n  const handleClick = (i) => {\r\n    const boardPoen = board.slice(0, stepNumber + 1)\r\n    const current = boardPoen[stepNumber]\r\n    const squares = [...current];\r\n    if (winner || squares[i]) return;\r\n    squares[i] = xIsNext ? \"X\" : \"O\";\r\n    setBoard([...boardPoen, squares]);\r\n    setXisNext(!xIsNext);\r\n    setStepNumber(boardPoen.length)\r\n  };\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0)\r\n    }\r\n\r\n    const moves = board.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n          <div className=\"status\">{status}</div>\r\n        <div className=\"game-board\">\r\n          <Board squares={board[stepNumber]} onClick={handleClick} />\r\n          <div className=\"game-info\">\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport Game from \"./Components/Game\";\n\n\nReactDOM.render(<Game />, document.getElementById(\"root\"))"],"sourceRoot":""}